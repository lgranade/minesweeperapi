// Code generated by sqlc. DO NOT EDIT.
// source: account_query.sql

package minesweeper

import (
	"context"

	"github.com/google/uuid"
)

const createAccount = `-- name: CreateAccount :one
insert into account (
	id, login_name, login_password
) values (
	$1, $2, $3
)
returning id, login_name, login_password, created_at
`

type CreateAccountParams struct {
	ID            uuid.UUID `json:"id"`
	LoginName     string    `json:"login_name"`
	LoginPassword string    `json:"login_password"`
}

func (q *Queries) CreateAccount(ctx context.Context, arg CreateAccountParams) (Account, error) {
	row := q.db.QueryRowContext(ctx, createAccount, arg.ID, arg.LoginName, arg.LoginPassword)
	var i Account
	err := row.Scan(
		&i.ID,
		&i.LoginName,
		&i.LoginPassword,
		&i.CreatedAt,
	)
	return i, err
}

const getAccountByID = `-- name: GetAccountByID :one
select id, login_name, login_password, created_at from account
where id = $1
`

func (q *Queries) GetAccountByID(ctx context.Context, id uuid.UUID) (Account, error) {
	row := q.db.QueryRowContext(ctx, getAccountByID, id)
	var i Account
	err := row.Scan(
		&i.ID,
		&i.LoginName,
		&i.LoginPassword,
		&i.CreatedAt,
	)
	return i, err
}
